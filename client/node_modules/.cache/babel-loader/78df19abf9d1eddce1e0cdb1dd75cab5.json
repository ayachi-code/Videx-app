{"ast":null,"code":"var _jsxFileName = \"/Users/bilalelayachi/Code/videx/client/src/components/display.js\";\nimport React from 'react';\nimport './style/display.css';\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null,\n      loading: true,\n      movie_info: null\n    };\n  }\n\n  async componentDidMount() {\n    //const find_url = \"http://localhost:9000/find/ \" + this.props.movie;\n    const info_url = \"http://localhost:9000/info/ \" + this.props.movie;\n\n    try {\n      const [data1, data2] = await Promise.all([//fetch(find_url),\n      fetch(info_url)]);\n      const respone = await Promise.all([\n      /*data1.json(),*/\n      data2.json()]);\n      this.setState({\n        /*movie: respone[0].name,*/\n        movie_info: respone[1],\n        loading: false\n      });\n    } catch (error) {\n      console.log(\"error\");\n    }\n    /*\n    const [data1,data2] = await Promise.all([\n      fetch(find_url),\n      fetch(info_url)\n    ])\n    const respone = await Promise.all([data1.json(),data2.json()]);\n    this.setState({movie: respone[0].name,movie_info: respone[1],loading: false})\n    */\n\n  }\n\n  render() {\n    const list_movie = [];\n\n    if (this.props.search) {\n      if (this.state.movie != null) {\n        for (const [index, value] of this.state.movie.entries()) {\n          list_movie.push( /*#__PURE__*/React.createElement(\"div\", {\n            id: \"result\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 29\n            }\n          }, value));\n        }\n      }\n    } else if (!this.props.search) {\n      if (this.state.movie_info != null) {\n        const movie_information = [];\n\n        for (var key in this.state.movie_info) {\n          var value = this.state.movie_info[key];\n          movie_information.push(value);\n        }\n\n        for (const [index, value] of movie_information.entries()) {\n          list_movie.push( /*#__PURE__*/React.createElement(\"div\", {\n            id: \"info\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 27\n            }\n          }, value));\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display\",\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }\n    }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 36\n      }\n    }, \"Loading....\") : list_movie);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/bilalelayachi/Code/videx/client/src/components/display.js"],"names":["React","Display","Component","constructor","props","state","movie","loading","movie_info","componentDidMount","info_url","data1","data2","Promise","all","fetch","respone","json","setState","error","console","log","render","list_movie","search","index","value","entries","push","movie_information","key"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAED,QAAMC,iBAAN,GAA0B;AAExB;AACA,UAAMC,QAAQ,GAAG,iCAAiC,KAAKN,KAAL,CAAWE,KAA7D;;AAGA,QAAI;AACF,YAAM,CAACK,KAAD,EAAOC,KAAP,IAAgB,MAAMC,OAAO,CAACC,GAAR,CAAY,CACtC;AACAC,MAAAA,KAAK,CAACL,QAAD,CAFiC,CAAZ,CAA5B;AAIA,YAAMM,OAAO,GAAG,MAAMH,OAAO,CAACC,GAAR,CAAY;AAAC;AAAiBF,MAAAA,KAAK,CAACK,IAAN,EAAlB,CAAZ,CAAtB;AACA,WAAKC,QAAL,CAAc;AAAC;AAA2BV,QAAAA,UAAU,EAAEQ,OAAO,CAAC,CAAD,CAA/C;AAAmDT,QAAAA,OAAO,EAAE;AAA5D,OAAd;AACD,KAPD,CAOE,OAAOY,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD;AACD;;;;;;;;;AAQD;;AAECC,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,EAAnB;;AACA,QAAI,KAAKnB,KAAL,CAAWoB,MAAf,EAAuB;AACrB,UAAI,KAAKnB,KAAL,CAAWC,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,aAAK,MAAM,CAACmB,KAAD,EAAOC,KAAP,CAAX,IAA4B,KAAKrB,KAAL,CAAWC,KAAX,CAAiBqB,OAAjB,EAA5B,EAAwD;AACtDJ,UAAAA,UAAU,CAACK,IAAX,eAAgB;AAAK,YAAA,EAAE,EAAC,QAAR;AAAiB,YAAA,GAAG,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BC,KAA9B,CAAhB;AACH;AACF;AACA,KAND,MAMO,IAAI,CAAC,KAAKtB,KAAL,CAAWoB,MAAhB,EAAwB;AAC7B,UAAI,KAAKnB,KAAL,CAAWG,UAAX,IAAyB,IAA7B,EAAmC;AACjC,cAAMqB,iBAAiB,GAAG,EAA1B;;AACA,aAAI,IAAIC,GAAR,IAAe,KAAKzB,KAAL,CAAWG,UAA1B,EAAsC;AACpC,cAAIkB,KAAK,GAAI,KAAKrB,KAAL,CAAWG,UAAX,CAAsBsB,GAAtB,CAAb;AACAD,UAAAA,iBAAiB,CAACD,IAAlB,CAAuBF,KAAvB;AACH;;AACD,aAAK,MAAM,CAACD,KAAD,EAAOC,KAAP,CAAX,IAA4BG,iBAAiB,CAACF,OAAlB,EAA5B,EAAyD;AACvDJ,UAAAA,UAAU,CAACK,IAAX,eAAgB;AAAK,YAAA,EAAE,EAAC,MAAR;AAAe,YAAA,GAAG,EAAEH,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA4BC,KAA5B,CAAhB;AACH;AACE;AACF;;AACC,wBACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKrB,KAAL,CAAWE,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArB,GAA8CgB,UADjD,CADH;AAIG;;AA7D2B;;AAiEtC,eAAetB,OAAf","sourcesContent":["import React from 'react'\nimport './style/display.css'\n\n\nclass Display extends React.Component { \n    \n  constructor(props) {\n    super(props)\n    this.state = {\n      movie: null,\n      loading: true,\n      movie_info: null,\n    }\n  }\n\n  async componentDidMount() {\n\n    //const find_url = \"http://localhost:9000/find/ \" + this.props.movie;\n    const info_url = \"http://localhost:9000/info/ \" + this.props.movie;\n\n\n    try {\n      const [data1,data2] = await Promise.all([\n        //fetch(find_url),\n        fetch(info_url)\n      ])\n      const respone = await Promise.all([/*data1.json(),*/data2.json()]);\n      this.setState({/*movie: respone[0].name,*/movie_info: respone[1],loading: false})\n    } catch (error) {\n      console.log(\"error\")\n    }\n    /*\n    const [data1,data2] = await Promise.all([\n      fetch(find_url),\n      fetch(info_url)\n    ])\n    const respone = await Promise.all([data1.json(),data2.json()]);\n    this.setState({movie: respone[0].name,movie_info: respone[1],loading: false})\n    */\n  }\n\n    render() {      \n      const list_movie = [];\n      if (this.props.search) {\n        if (this.state.movie != null) {\n          for (const [index,value] of this.state.movie.entries()) {\n            list_movie.push(<div id=\"result\" key={index}>{value}</div>)\n        } \n      }\n      } else if (!this.props.search) {\n        if (this.state.movie_info != null) {\n          const movie_information = [];\n          for(var key in this.state.movie_info) {\n            var value =  this.state.movie_info[key];\n            movie_information.push(value);\n        }\n        for (const [index,value] of movie_information.entries()) {\n          list_movie.push(<div id=\"info\" key={index}>{value}</div>)\n      } \n        }\n      }\n        return(\n           <div className=\"display\" id=\"display\">\n             {this.state.loading ? <div>Loading....</div> : list_movie}\n          </div>\n         )}\n\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}