{"ast":null,"code":"var _jsxFileName = \"/Users/bilalelayachi/Code/videx/client/src/components/display.js\";\nimport React from 'react';\nimport './style/display.css';\n\nclass Display extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      movie: null,\n      loading: true,\n      movie_info: null\n    };\n  }\n\n  async componentDidMount() {\n    const urls = [\"http://localhost:9000/find/ \" + this.props.movie, \"http://localhost:9000/info/ \" + this.props.movie];\n    Promise.all([fetch(urls[0]), fetch(urls[1])]).then(([res1, res2]) => {\n      return Promise.all([res1.json(), res2.json()]);\n    }).then(([res1, res2]) => {\n      // set state in here\n      console.log(res2);\n    });\n    /*\n    const url = \"http://localhost:9000/find/ \" + this.props.movie;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({movie: data.name,loading: false})\n    */\n  }\n\n  render() {\n    const list_movie = [];\n\n    if (this.props.search) {\n      if (this.state.movie != null) {\n        for (const [index, value] of this.state.movie.entries()) {\n          list_movie.push( /*#__PURE__*/React.createElement(\"div\", {\n            id: \"result\",\n            key: index,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 29\n            }\n          }, value));\n        }\n      }\n    } else if (!this.props.search) {\n      console.log(this.state.movie_info);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"display\",\n      id: \"display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 36\n      }\n    }, \"Loading....\") : list_movie);\n  }\n\n}\n\nexport default Display;","map":{"version":3,"sources":["/Users/bilalelayachi/Code/videx/client/src/components/display.js"],"names":["React","Display","Component","constructor","props","state","movie","loading","movie_info","componentDidMount","urls","Promise","all","fetch","then","res1","res2","json","console","log","render","list_movie","search","index","value","entries","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;;AAGA,MAAMC,OAAN,SAAsBD,KAAK,CAACE,SAA5B,CAAsC;AAEpCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,UAAU,EAAE;AAHD,KAAb;AAKD;;AAED,QAAMC,iBAAN,GAA0B;AAExB,UAAMC,IAAI,GAAG,CACX,iCAAiC,KAAKN,KAAL,CAAWE,KADjC,EAEX,iCAAiC,KAAKF,KAAL,CAAWE,KAFjC,CAAb;AAKAK,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,KAAK,CAACH,IAAI,CAAC,CAAD,CAAL,CAAN,EAAiBG,KAAK,CAACH,IAAI,CAAC,CAAD,CAAL,CAAtB,CAAZ,EAECI,IAFD,CAEM,CAAC,CAACC,IAAD,EAAOC,IAAP,CAAD,KAAkB;AACrB,aAAOL,OAAO,CAACC,GAAR,CAAY,CAACG,IAAI,CAACE,IAAL,EAAD,EAAcD,IAAI,CAACC,IAAL,EAAd,CAAZ,CAAP;AACF,KAJD,EAKCH,IALD,CAKM,CAAC,CAACC,IAAD,EAAOC,IAAP,CAAD,KAAkB;AACtB;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KARD;AAUA;;;;;;AAMD;;AAECI,EAAAA,MAAM,GAAG;AACP,UAAMC,UAAU,GAAG,EAAnB;;AACA,QAAI,KAAKjB,KAAL,CAAWkB,MAAf,EAAuB;AACrB,UAAI,KAAKjB,KAAL,CAAWC,KAAX,IAAoB,IAAxB,EAA8B;AAC5B,aAAK,MAAM,CAACiB,KAAD,EAAOC,KAAP,CAAX,IAA4B,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,OAAjB,EAA5B,EAAwD;AACtDJ,UAAAA,UAAU,CAACK,IAAX,eAAgB;AAAK,YAAA,EAAE,EAAC,QAAR;AAAiB,YAAA,GAAG,EAAEH,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA8BC,KAA9B,CAAhB;AACH;AACF;AACA,KAND,MAMO,IAAI,CAAC,KAAKpB,KAAL,CAAWkB,MAAhB,EAAwB;AAC9BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKd,KAAL,CAAWG,UAAvB;AACA;;AACC,wBACG;AAAK,MAAA,SAAS,EAAC,SAAf;AAAyB,MAAA,EAAE,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKH,KAAL,CAAWE,OAAX,gBAAqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAArB,GAA8Cc,UADjD,CADH;AAIG;;AAnD2B;;AAuDtC,eAAepB,OAAf","sourcesContent":["import React from 'react'\nimport './style/display.css'\n\n\nclass Display extends React.Component { \n    \n  constructor(props) {\n    super(props)\n    this.state = {\n      movie: null,\n      loading: true,\n      movie_info: null\n    }\n  }\n\n  async componentDidMount() {\n\n    const urls = [\n      \"http://localhost:9000/find/ \" + this.props.movie,\n      \"http://localhost:9000/info/ \" + this.props.movie\n    ]\n\n    Promise.all([fetch(urls[0]), fetch(urls[1])])\n\n    .then(([res1, res2]) => { \n       return Promise.all([res1.json(), res2.json()]) \n    })\n    .then(([res1, res2]) => {\n      // set state in here\n      console.log(res2)\n    });\n\n    /*\n    const url = \"http://localhost:9000/find/ \" + this.props.movie;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({movie: data.name,loading: false})\n    */\n  }\n\n    render() {      \n      const list_movie = [];\n      if (this.props.search) {\n        if (this.state.movie != null) {\n          for (const [index,value] of this.state.movie.entries()) {\n            list_movie.push(<div id=\"result\" key={index}>{value}</div>)\n        } \n      }\n      } else if (!this.props.search) {\n       console.log(this.state.movie_info);\n      } \n        return(\n           <div className=\"display\" id=\"display\">\n             {this.state.loading ? <div>Loading....</div> : list_movie}\n          </div>\n         )}\n\n}\n\nexport default Display"]},"metadata":{},"sourceType":"module"}